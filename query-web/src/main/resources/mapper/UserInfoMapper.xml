<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ambition.query.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ambition.query.domain.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, user_password, user_role
  </sql>

  <select id="getUserInfoByUserName" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>

  <insert id="insert" parameterType="com.ambition.query.domain.UserInfo" >
    insert into user_info (id, user_name, user_password,
    user_role)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
    #{userRole,jdbcType=INTEGER})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.ambition.query.domain.UserInfo" >
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
    user_password = #{userPassword,jdbcType=VARCHAR},
    user_role = #{userRole,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>